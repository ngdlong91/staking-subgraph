type Staking @entity {
    id:ID!
}

type Params @entity {
    id:ID!
}

type StakingStats @entity {
    id:ID!
    totalValidator:BigInt!
    totalProposer:BigInt!
}


type Validator @entity {
  id: ID! # SMC address
  name: String!
  signer: String! # Owner address
  status:BigInt!  # Default 1
  accumulatedCommission:BigInt! # Default = 0
  maxRate: BigInt!
  maxChangeRate:BigInt!
  rate:BigInt!
  updateTime:BigInt!

}

type SigningInfo @entity {
    id:ID!
}

type Delegator @entity {
  id: ID! #Delegator address
  stakedAmount: BigInt!
  reward: BigInt!
  timestamp: BigInt!
  validators: [Validator!]
  delegateRecords: [DelegateRecord!]
  undelegateRecords: [UndelegateRecord!]
  withdrawRecords: [WithdrawRecord!]
  withdrawRewardRecords: [WithdrawRewardRecord!]
}


type DelegateRecord @entity {
  id:ID! # txHash
}

type UndelegateRecord @entity {
  id:ID!
}

type WithdrawRecord @entity {
  id:ID!
}

type WithdrawRewardRecord @entity {
  id:ID!
}